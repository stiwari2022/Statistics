Lisp=[1, 3, 5, 7, 100]





def Removing_Outliers(Chubstering):
  def Bubble_Sort(Chubstering):
    for Chubning in range(len(Chubstering)-1,0,-1):
      for Lorem_Ipsuming in range(Chubning):
        if Chubstering[Lorem_Ipsuming]>Chubstering[Lorem_Ipsuming+1]:
          Chubsterling = Chubstering[Lorem_Ipsuming]
          Chubstering[Lorem_Ipsuming] = Chubstering[Lorem_Ipsuming+1]
          Chubstering[Lorem_Ipsuming+1] = Chubsterling
  def Medianing(Chubstering):
      Bubble_Sort(Chubstering)
      feed=len(Chubstering)//2
      return (Chubstering[feed]+Chubstering[~feed])/2
  def Standard_Deviation(Chubstering):
    need=len(Chubstering)
    meed=Medianing(Chubstering)
    deed=[(leed-meed)**2 for leed in Chubstering]
    Variance=sum(deed)/need
    Dev=Variance**0.5
    return Dev
  Median=Medianing(Chubstering)
  SD=Standard_Deviation(Chubstering)
  zeed=0
  xeed=len(Chubstering)
  beed=Median+SD*2
  ceed=Median-SD*2
  deed=Chubstering[0]
  while (zeed<=xeed):
    if (zeed==len(Chubstering)):
      break
    yeed=Chubstering[zeed-1]
    if (yeed>beed):
      Chubstering.remove(yeed)
    if (yeed<ceed):
      Chubstering.remove(yeed)
    zeed=zeed+1
Removing_Outliers(Lisp)
